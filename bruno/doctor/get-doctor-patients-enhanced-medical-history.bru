meta {
  name: Get Doctor Patients with Enhanced Medical History
  type: http
  seq: 17
}

get {
  url: {{baseUrl}}/api/doctors/{{doctorId}}/patients
  body: none
  auth: bearer
}

headers {
  Authorization: Bearer {{doctorAccessToken}}
}

auth:bearer {
  token: {{doctorAccessToken}}
}

vars:pre-request {
  doctorId: {{$processEnv.DOCTOR_ID}}
}

tests {
  test("should return 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should return array of patients", function() {
    expect(res.body).to.be.an('array');
  });
  
  test("should contain enhanced patient data with medical histories", function() {
    if (res.body.length > 0) {
      const patient = res.body[0];
      expect(patient).to.have.property('id');
      expect(patient).to.have.property('name');
      expect(patient).to.have.property('surname');
      expect(patient).to.have.property('medicalHistories');
      expect(patient).to.have.property('medicalHistory'); // Backward compatibility
      
      // Check if medicalHistories is an array
      expect(patient.medicalHistories).to.be.an('array');
    }
  });
  
  test("should have medical history entries with proper structure", function() {
    if (res.body.length > 0) {
      const patient = res.body[0];
      if (patient.medicalHistories && patient.medicalHistories.length > 0) {
        const history = patient.medicalHistories[0];
        expect(history).to.have.property('id');
        expect(history).to.have.property('content');
        expect(history).to.have.property('createdAt');
        expect(history).to.have.property('doctorName');
        expect(history).to.have.property('doctorSurname');
      }
    }
  });
  
  test("should maintain backward compatibility with medicalHistory field", function() {
    if (res.body.length > 0) {
      const patient = res.body[0];
      // The medicalHistory field should exist for backward compatibility
      expect(patient).to.have.property('medicalHistory');
    }
  });
}