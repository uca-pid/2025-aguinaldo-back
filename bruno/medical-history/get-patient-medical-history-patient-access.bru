meta {
  name: Get Patient Medical History - Patient Access
  type: http
  seq: 12
}

get {
  url: {{baseUrl}}/api/medical-history/patient/{{patientId}}
  body: none
  auth: bearer
}

headers {
  Authorization: Bearer {{patientAccessToken}}
}

auth:bearer {
  token: {{patientAccessToken}}
}

vars:pre-request {
  patientId: {{$processEnv.PATIENT_ID}}
}

tests {
  test("should return 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should return array of medical histories", function() {
    expect(res.body).to.be.an('array');
  });
  
  test("should contain entries for the patient", function() {
    if (res.body.length > 0) {
      res.body.forEach(entry => {
        expect(entry).to.have.property('patientId', vars.patientId);
        expect(entry).to.have.property('content');
        expect(entry).to.have.property('createdAt');
        expect(entry).to.have.property('doctorName');
        expect(entry).to.have.property('doctorSurname');
        expect(entry).to.have.property('turnId');
      });
    }
  });
  
  test("should be ordered by creation date (newest first)", function() {
    if (res.body.length > 1) {
      const first = new Date(res.body[0].createdAt);
      const second = new Date(res.body[1].createdAt);
      expect(first.getTime()).to.be.greaterThanOrEqual(second.getTime());
    }
  });
}